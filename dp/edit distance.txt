leetcode : 72.
question : min no. of operation to make string1 into string s2 .
operation that can be perform are add , delete , replace.

intution : travser dp ,and check if string ith and j elem are same , 
so no need to perfrom any operation , store previous value in dp,
if word1[i-1] != word2[j-1] then get min of 3 elem on left of dp.

return dp[n][m];

Note : based case is  : for row 0 le kiye colum times operation perform kena hoga 
same goes for column 0 ke lye row times opeation krna hoga.

//--------------------------------------//


class Solution {
public:
    int minDistance(string word1, string word2) {
        int m = word1.length();
        int n = word2.length();
        
        vector<vector<int>> dp(m+1, vector<int>(n+1));
        
        for (int i = 0; i <= m; i++) {
            dp[i][0] = i;
        }
        
        for (int j = 0; j <= n; j++) {
            dp[0][j] = j;
        }
        
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                if (word1[i-1] == word2[j-1]) {
                    dp[i][j] = dp[i-1][j-1];
                } else {
                    dp[i][j] = 1 + min({dp[i][j-1], dp[i-1][j], dp[i-1][j-1]});
                }
            }
        }
        
        return dp[m][n];
    }
};

