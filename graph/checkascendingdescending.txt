#include<bits/stdc++.h>
using namespace std;
bool dfs(int start,int end,vector<int>adj[], vector<int>&vis) {
	vis[start] =1;
	if(start == end){
	    return true;
	}
	for(auto it : adj[start]) {
		if(vis[it] ==-1) {
			if(dfs(it, end,adj, vis ) == true) {
				return true;
			}
		}
	}
	return false;
}
bool createGraph(vector<string>&arr, string elem) {
	vector<int>adj[26];
	for(int i=0; i<arr.size(); i++) {
		int u = arr[i][0]-'a';
		int v = arr[i][2]-'a';
		if(arr[i][1] == '>') {
		adj[v].push_back(u);
		}
		adj[u].push_back(v);


	}

	int start =0;
	int end= 0;

	if(elem[1] == '<') {
		start = elem[0] - 'a';
		end = elem[2] - 'a';
	} else {
		start = elem[2] - 'a';
		end = elem[0] - 'a';
	}


	vector<int>vis(26,-1);
	if(dfs(start, end, adj,vis)== true) {
		return true;
	}
	return false;

}

int main() {
	vector<string>vec = {"a<b","b>c","a<c","d>b"};
	string query = "d>a";
	bool ans = createGraph(vec,query );
	cout<<ans;



}