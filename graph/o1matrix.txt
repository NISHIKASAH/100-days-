class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n=mat.size();
        int m=mat[0].size();
        vector<vector<int>> dist(n,vector<int> (m,0));
        vector<vector<int>> vis(n,vector<int> (m,0));
        queue<pair<pair<int,int>,int>> q;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]==0){
                    vis[i][j]=1;
                    q.push({{i,j},0});
                }
            }
        }
        int drow[4]={0,+1,0,-1};
        int dcol[4]={+1,0,-1,0};
        while(!q.empty()){
            int i=q.front().first.first;
            int j=q.front().first.second;
            int t=q.front().second;
            dist[i][j]=t;
            q.pop();
            for(int k=0;k<4;k++)
            {
                int row=i+drow[k];
                int col=j+dcol[k];
                if(row<n and col<m and row>=0 and col>=0 and !vis[row][col]){
                    q.push({{row,col},t+1});
                    vis[row][col]=1;
                }
            }
        }
        return dist;
    }
};