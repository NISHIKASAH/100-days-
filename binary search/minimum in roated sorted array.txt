question  : find minimum in rotated sorted array . 

example : Input: nums = [4,5,6,7,0,1,2]
Output: 0
Explanation: The original array was [0,1,2,4,5,6,7] and it was rotated 4 times.

intution : if first half is sorted then min is arr[low] , then move to check their is any min elem 
on right side , else min is arr[mid] and move to left side to check for min.

//---------------------------------------------//

class Solution {
public:
    int findMin(vector<int>& arr) {
        int low =0;
        int high = arr.size()-1;
        int ans = INT_MAX;
        while(low<high){
            int mid = (low+high)/2;
            if(arr[low] < arr[mid]){
                ans= min(arr[low] , ans);
                low = mid+1;
            }
            else{
                ans = min(arr[mid] , ans);
                high = mid-1;
            }
        }
        return ans;
    }
};