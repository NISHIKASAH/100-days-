question : find first and last occurence of a number . 

intution : using bs search for elem if its found , then move to its left side to check for 
first occurence . 
and for last occurence , move to right side . 

//-------------------------------------------//

class Solution {
public:
    int firstocc(vector<int> &nums,int target){
        int start=0,end=nums.size()-1;
        int ans=-1;
        while(start<=end){
            int mid=(start+end)/2;
            if(nums[mid]==target){
                ans=mid;
                end=mid-1;
            }
            else if(nums[mid]<target){
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return ans;
    }
    int lastocc(vector<int> &nums,int target){
        int start=0,end=nums.size()-1;
        int ans=-1;
        while(start<=end){
            int mid=(start+end)/2;
            if(nums[mid]==target){
                ans=mid;
                start=mid+1;
            }
            else if(nums[mid]<target){
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return ans;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        int first=firstocc(nums,target);
        int last=lastocc(nums,target);
        return {first,last};
    }
};

