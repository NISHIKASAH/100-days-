/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    
    void solve(Node* root,vector<int>&ans){
        map<int,int>mp;
        queue<pair<Node*,int>>q;
        q.push({root,0});
        while(!q.empty()){
            Node * temp =q.front().first;
            int level = q.front().second;
            q.pop();
            if(mp[level]==0){
                mp[level] = temp->data;
            }
            if(temp->left){
                q.push({temp->left,level-1});
            }
            if(temp->right){
                q.push({temp->right,level+1});
            }
        }
        for(auto it:mp){
            ans.push_back(it.second);
        }
        return;
        
    }
    vector<int> topView(Node *root)
    {
        vector<int>ans;
        solve(root,ans);
        return ans;
    }

};
