question : swap left child to right and righ to  left child .i.e invert the tree.

intution : while moving down , swap root left and right child and move downward.

//----------------------------------------//

class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(root == NULL ) return root;
       TreeNode* temp = root->left;
        root->left = root->right;
        root->right = temp;
        if(root->left) invertTree(root->left);
        if(root->right) invertTree(root->right);
        return root;
    }
};