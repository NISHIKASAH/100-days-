question : find the kth largest elem in bst . 

intution :largest elem is on right side , so start traversing right side , while return just  make 
a count which stated node is visted  when count==k store root->val in ans.

//------------------------------------------------------//

/*The Node structure is defined as
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

// return the Kth largest element in the given BST rooted at 'root'
class Solution
{
    public:
    int ans= 0 ;
    int count= 0;
    void solve(Node * root ,int k){
        if(root ==NULL){
            return ;
        }
     
        solve(root->right , k);
         
      count++; //first mark will be the leaf node 
        if(count==k){
            ans = root->data;
        }
         solve(root->left , k);
        
    }
    int kthLargest(Node *root, int k)
    {
        solve(root,k);
        return ans;
    }
};