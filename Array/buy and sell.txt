question : choose a day to buy stock and sell on diff day to sell the stock 
to make max profit.


class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int minsofar = prices[0];
        int profit = 0;
         for(int i=1;i<prices.size();i++){
            minsofar = min(minsofar , prices[i]);
            profit = max(profit , prices[i]-minsofar);
         }
         return profit;
    }
};

//------------------------------------------------------------//
question :choose a day where stock can be buy /sell to maximize profit.
class Solution {
public:
int solve(int idx , int day , vector<int>&prices , vector<vector<int>>&dp){
    if(idx>=prices.size()) return 0;
    if(dp[idx][day]!=-1){
        return dp[idx][day];
    }
    if(day){
        int profit = INT_MIN;
        int buy =- prices[idx] + solve(idx+1 , !day ,prices , dp );
        int notbuy = 0 + solve(idx+1 , day , prices , dp);
        profit = max(buy , notbuy);
        dp[idx][day] = profit;
        return dp[idx][day];
    }
    else{
        int  profit = INT_MIN;
        int sell = prices[idx] + solve(idx+1 , !day , prices , dp );
        int notsell = 0 + solve(idx+1 , day , prices , dp);
        profit = max(sell ,notsell);
        dp[idx][day] = profit;
        return dp[idx][day];
    }
}
    int maxProfit(vector<int>& prices) {
         int n = prices.size();
        vector<vector<int>>dp(n,vector<int>(2,-1));
        int day = 1;
       return solve(0, day , prices , dp);
    
    }
};
