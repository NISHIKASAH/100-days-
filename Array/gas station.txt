question : return the starting gas station's index if you can 
travel around the circuit once in the clockwise direction, otherwise return -1.
 If there exists a solution, it is guaranteed to be unique.

intution : get total_gas total_cost and curr_gas and if curr_gas  <0 it mean new position to start, 
and in end just check if total_cost > total_gas then cycle cannot be completed , else return pos.

//------------------------------------------------------------//

class Solution {
public:
    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
        int n = gas.size();
        int total_gas = 0;
        int total_cost = 0;
        int curr_gas = 0;
        int pos=0;
        for(int i=0;i<n;i++){
            total_gas += gas[i];
            total_cost += cost[i];
            curr_gas += gas[i] - cost[i];
            if(curr_gas<0){
                pos = i+1;
                curr_gas = 0;
            }
        }
        return (total_cost>total_gas)?-1:pos;
    }
};