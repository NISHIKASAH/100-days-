Minimize maximum array element possible
 by at most K splits on the given array

#include<bits/stdc++.h>
using namespace std;
int main() {
	int n= 4;
	vector<int>vec =  {2, 4, 8, 2};
	int k = 4;
	int minelem = *min_element(vec.begin(), vec.end());
	int maxelem = *max_element(vec.begin(), vec.end());

	while(k>0) {
		for(int i=0; i<n; i++) {
			if(vec[i] == maxelem) {
				vec[i] -= minelem;
				vec.push_back(minelem);
				k--;
			}
		}
		minelem = *min_element(vec.begin(), vec.end());
		maxelem = *max_element(vec.begin(), vec.end());
		
		

	}
	for(int i=0;i<vec.size();i++){
	    cout<<vec[i]<<" ";
	    
	}cout<<endl;
	int ans = 0;
	ans = *max_element(vec.begin(), vec.end());
	cout<<ans;

}

//------------------optimised----------------------
#include<bits/stdc++.h>
using namespace std;
int main() {
	int n= 4;
	vector<int>vec =  {2, 4, 8, 2};
	int k = 4;
	int minelem = *min_element(vec.begin(), vec.end());
	int maxelem = *max_element(vec.begin(), vec.end());

	while(k>0) {
		for(int i=0; i<n; i++) {
			if(vec[i] == maxelem) {
				vec[i] -= minelem;
				vec.push_back(minelem);
				k--;
			}
		}
		minelem = *min_element(vec.begin(), vec.end());
		maxelem = *max_element(vec.begin(), vec.end());
		
		

	}
	for(int i=0;i<vec.size();i++){
	    cout<<vec[i]<<" ";
	    
	}cout<<endl;
	int ans = 0;
	ans = *max_element(vec.begin(), vec.end());
	cout<<ans;

}