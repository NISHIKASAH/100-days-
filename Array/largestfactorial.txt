intution : get a huge array and store arr[0] =1;
and current size =1 which refer to factorial of 1.
start iterating for fac of 2 to n.
and for multily each fac with ans array elem , and when carray is remaining ,
mean our size of ans array has increased .
so store carry value in ans array till carry >0.

//-----------------------------------------//

class Solution {
public:
void solve(int multiplier,int &lenofans , vector<int>&ans ){
    int res=0;
    int carry = 0;
    for(int i=0;i<lenofans;i++){
        int res = multiplier * ans[i];
        res = res + carry;
        ans[i] = res%10;
        carry = res/10;
        
        
    }
    while(carry>0){
        ans[lenofans] = carry%10;
        lenofans++;
        carry = carry/10;
    }
    
}
    vector<int> factorial(int N){
        vector<int>ans(10000,0);
        ans[0] = 1;
        int size = 1;
        for(int i=2;i<=N;i++){
            solve(i , size,ans);
        }
        vector<int>result;
      for(int i=size-1;i>=0;i--){
            result.push_back(ans[i]);
        }
        return result;
        
    }
};