question : find top k frequenct word  , if there are more with same occurence 
then ,return ans in lexocigraphical order


intution : map the word,to get freq , now to get top k , 
use max-heap priority queue , and use comp  , inside for the given 
condition ,i.e (use this comp as operator overloaded)
and return top k words

//--------------------------------------//

class comp {
    public : 
    bool operator() (pair<int,string>&a , pair<int,string>&b){
        if(a.first == b.first){
            return a.second > b.second;
        }
        else return a.first < b.first;

    }
};
class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        unordered_map<string,int>mp;
        for(int i=0;i<words.size() ;i++){
            mp[words[i]]++;
        }
      priority_queue<pair<int ,string> , vector<pair<int,string>>,comp>pq;
      for(auto it : mp){
        pq.push({it.second , it.first});
      }
      vector<string>ans;
      while(k--){
        ans.push_back(pq.top().second);
        pq.pop();

      }
      return ans;

    }
};