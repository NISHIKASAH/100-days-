maximize the profit by add weight  <= given weight

idea : sort value/weight in decreasing to gain max profit , 
// class implemented
/*
struct Item{
    int value;
    int weight;
};
*/

class Solution {
  public:
  static bool comp(Item a , Item b){
      double r1 = (double)a.value / (double)a.weight;
      double r2 = (double)b.value / (double)b.weight;
      return r1>r2;
  }
    // Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int w, Item arr[], int n) {
        sort(arr ,arr+n , comp);
        double  currW=0.0;
        double currValue= 0.0;
        for(int i=0;i<n;i++){
            if(currW + arr[i].weight <= w){
                currW += arr[i].weight ; 
                currValue += arr[i].value;
                
            }
            else{
                int remaining = w - currW;
                currValue += (double)arr[i].value/(double)arr[i].weight * remaining;
                break;
                
            }
        }
        return currValue;
    }
};