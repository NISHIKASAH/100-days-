question : is to sort the listnode.

intution : using slow & fast appproach find the mid elm ,break in two
listnode , give this  two listnode  to fun to return a merge sorted listnode

//----------------------------------------------//

class Solution {
public:

    
    ListNode * merge(ListNode * l1,ListNode * l2){
        ListNode *ptr = new ListNode(0);
        ListNode *curr = ptr;
        
        while(l1 != NULL && l2 != NULL)
        {
            if(l1->val <= l2->val)
            {
                curr -> next = l1;
                l1 = l1 -> next;
            }
            else
            {
                curr -> next = l2;
                l2 = l2 -> next;
            }
        
        curr = curr ->next;
        
        }
        
       
        
        if(l1 != NULL)
        {
            curr -> next = l1;
            l1 = l1->next;
            curr = curr->next;
        }
        
        if(l2 != NULL)
        {
            curr -> next = l2;
            l2 = l2 ->next;
            curr = curr->next;
        }
        
        return ptr->next;
    }
    
    
    ListNode* sortList(ListNode* head) {
       if(head == NULL || head ->next == NULL)
            return head;
        ListNode *temp = NULL;
        ListNode *slow = head;
        ListNode *fast = head;
        while(fast !=  NULL && fast -> next != NULL)
        {
            temp = slow;
            slow = slow->next;          
            fast = fast ->next ->next; 
            
        }   
        temp -> next = NULL;            
        
        ListNode* l1 = sortList(head);    
        ListNode* l2 = sortList(slow);    
        
        return merge(l1, l2);         
            
    }
};