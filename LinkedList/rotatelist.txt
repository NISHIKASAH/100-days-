question : rotate the linkedlist 

intution : make linkedlist circlular  and node iterate to node weher we hv to break ,
so make sure to ppoint its next as head.

//-----------------------------------------------//

class Solution {
public:
int getLength(ListNode* head) {
    int len = 0;
    ListNode * curr = head;
    while(curr!=NULL){
        len++;
        curr = curr->next;
    }
    return len;
}
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == NULL  || head->next ==NULL || k<=0) return head;
        int len = getLength(head);
      
        k = k%len;
        ListNode * curr= head;
        while(curr->next!=NULL){
            curr = curr->next;
        }
        curr->next = head;
        int step = len-k;
        ListNode * temp = head;
        if(step==0){
            temp->next =NULL;
        }
        else{
            for(int i=1;i<step;i++){
                temp =temp->next;
            }
            head = temp->next ;
             temp->next = NULL;

        }
        return head;
        
        

    }
};